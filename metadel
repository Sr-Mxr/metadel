#!/bin/bash

# Función para mostrar el banner
mostrar_banner() {
    echo -e "\e[1;31m"
    echo      "************************************"
    echo      "*                                  *"
    echo      "*        \~ D E L E T E ~/         *"
    echo      "*                                  *"
    echo      "*        M E T A D A T O S         *"
    echo      "*                           By:mxr *"
    echo      "************************************"
    echo -e "\e[0m"
}

# Función para mostrar los metadatos de una imagen
mostrar_metadatos() {
    echo -e "\e[1;32mMostrando metadatos de la imagen '$1':\e[0m"
    exiftool "$1"
}

# Mostrar el banner
mostrar_banner

# Verificar si ExifTool está instalado
if ! command -v exiftool &> /dev/null
then
    echo -e "\e[1;33mExifTool no está instalado. Instalando...\e[0m"
    sudo apt-get install -y libimage-exiftool-perl
fi

# Pedir al usuario las rutas de las imágenes
read -p $'\e[1;35mIntroduce las rutas y nombres de las imágenes separadas por espacios(ejemplo: /ruta/a/imagen1.jpg /ruta/b/imagen2.jpg): \e[0m' imagenes

# Convertir la lista de imágenes en un array
IFS=' ' read -r -a imagenes_array <<< "$imagenes"

# Iterar sobre cada imagen
for imagen in "${imagenes_array[@]}"
do
    # Verificar si la imagen existe
    if [ ! -f "$imagen" ]; then
        echo -e "\e[1;31mLa imagen '$imagen' no existe. Por favor, asegúrate de introducir rutas y nombres correctos.\e[0m"
    else
        # Mostrar los metadatos de la imagen
        mostrar_metadatos "$imagen"

        # Preguntar al usuario si desea borrar los metadatos
        read -p $'\e[1;33m¿Deseas borrar los metadatos de esta imagen? (s/n): \e[0m' respuesta
        if [ "$respuesta" = "s" ]; then
            # Borrar los metadatos de la imagen
            exiftool -all= "$imagen"
            echo -e "\e[1;32mMetadatos eliminados exitosamente de '$imagen'\e[0m"
        else
            echo -e "\e[1;31mLos metadatos de la imagen '$imagen' no fueron borrados.\e[0m"
        fi
    fi
done
